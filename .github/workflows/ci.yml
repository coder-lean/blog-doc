# 此次CI的项目名称
# yml文件要注意缩进
name: Test Github Actions
# hook是git push
on:
  push:
    branches:
      - main

# 开始构建
jobs:
  # 流程名称
  build:
    # 运行的虚拟机环境
    runs-on: ubuntu-latest

    steps:
      # 拿到仓库源代码
      - uses: actions/checkout@v2
        with:
          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0

      # 安装nodejs环境
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          # 选择要使用的 node 版本
          node-version: '14'

      # 缓存 node_modules
      - name: Cache dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 如果缓存没有命中，安装依赖
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      # 运行构建脚本
      - name: Build VuePress site
        run: yarn docs:build

      # # 部署到服务器
      - name: Deploy to Server
        uses: AEnterprise/rsync-deploy@v1.0 # 使用别人包装好的步骤镜像
        env:
          DEPLOY_KEY: ${{ secrets.ACCESS_TOKEN }} # 引用配置，SSH私钥
          ARGS: -avz --delete --exclude='*.pyc' --exclude='node_modules/*' # rsync参数，排除.pyc文件
          SERVER_PORT: ${{ secrets.REMOTE_PORT }} # SSH端口
          FOLDER: docs/.vuepress/dist/* # 要推送的文件夹，路径相对于代码仓库的根目录
          SERVER_IP: ${{ secrets.REMOTE_HOST }} # 引用配置，服务器的host名（IP或者域名domain.com）
          USERNAME: ${{ secrets.REMOTE_USER }} # 引用配置，服务器登录名
          SERVER_DESTINATION: ${{ secrets.REMOTE_TARGET }}
